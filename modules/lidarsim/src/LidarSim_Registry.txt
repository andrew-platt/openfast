include Registry_NWTC_Library.txt

 ..... LidarSim_InitInputType data ........................................................................................................
typedef  LidarSim/LidarSim InitInputType     CHARACTER(1024)      RootName       -  -  -  "Root of the file name -- for summary or echo" -
typedef  ^                 InitInputType     CHARACTER(1024)      InputInitFile  -  -  -  "Name of the Input file" -
typedef  ^                 InitInputType     DbKi                 DT             -  -  -  "Step size" s
typedef  ^                 InitInputType     ReKi                 LidarRefPosition      {3}      -   -   "X-Y-Z reference position  of Lidar reference point (reference may be Nacelle, hub, ground, or platform -- depends on calling code)"    m
typedef  ^                 InitInputType     R8Ki                 LidarRefOrientation   {3}{3}   -   -   "DCM reference orientation of Lidar reference point (reference may be Nacelle, hub, ground, or platform -- depends on calling code)"    -
typedef  ^                 InitInputType     LOGICAL              UsePrimaryInputFile     -  .TRUE.   -  "Read input file instead of passed input data"  -
typedef  ^                 InitInputtype     FileInfoType         PassedFileData          -     -     -  "Primary input file as FileInfoType (set by driver/glue code when UsePrimaryInputFile==.false.)"   -

 ..... LidarSim_InitOutputType data .......................................................................................................
typedef  LidarSim/LidarSim InitOutputType    CHARACTER(ChanLen)   WriteOutputHdr          :  -        -  "Names of output-to-file channels"   -
typedef  ^                 InitOutputType    CHARACTER(ChanLen)   WriteOutputUnt          :  -        -  "Units of output-to-file channels"   -
typedef  ^                 InitOutputType    ReKi                 UnifWind_Xoffset_URef   -  -        -  "URef for using input file URef instead of IfW values for calculating uniform wind. For testing purposes only" m/s
typedef  ^                 InitOutputType    LOGICAL              UnifWind_Xoffset_URefF  -  .false.  -  "Flag for using input file URef instead of IfW values for calculating uniform wind. For testing purposes only" -

 ..... LidarSim_OutputType data .......................................................................................................
typedef  LidarSim/LidarSim OutputType     ReKi     WriteOutput          :   -   -   "Array with values to output to file"   -
typedef  ^                 OutputType     ReKi     SwapOutputs          :   -   -   "Array with values to output to avrSwap array"   -
typedef  ^                 OutputType     ReKi     AllOutputs           :   -   -   "Array containing all possible outputs"   -
typedef  ^                 OutputType     ReKi     IMUOutputs           :   -   -   "Array containing Position, Velocity, and Acceleration of the lidar system" -
typedef  ^                 OutputType     MeshType LidarMeasMesh        -   -   -   "Motion Mesh of all measurement points -- for visualization and wind velocity inputs" -

 ..... LidarSim_ParameterType data .......................................................................................................
typedef  LidarSim/LidarSim ParameterType  IntKi    MeasurementMaxSteps           -        -   -   "Time steps between lidar measurements" -
typedef  ^                 ParameterType  CHARACTER(1024)  RootName              -        -   -   "RootName for writing output files"  -
typedef  ^                 ParameterType  ReKi     MeasuringPoints_L             {:}{:}   -   -   "2D Array of all measuringpoints, first dimension is always 3"   m
typedef  ^                 ParameterType  ReKi     MeasuringPoints_Spherical_L   {:}{:}   -   -   "2D Array of all measuringpoints, first dimension is always 3 (spherical representation)"   "m deg deg"
typedef  ^                 ParameterType  ReKi     WeightingDistance             {:}      -   -   "Distances to evalute for the weighting"   m
typedef  ^                 ParameterType  ReKi     Weighting                     {:}      -   -   "weighting of different positions"   -
typedef  ^                 ParameterType  IntKi    nWeightPts                    -        -   -   "number of weighting points at each measurement position"   -
typedef  ^                 ParameterType  ReKi     UnifWind_Xoffset_URef         -        -   -   "URef for using input file URef instead of IfW values for calculating uniform wind. For testing purposes only" m/s
typedef  ^                 ParameterType  LOGICAL  UnifWind_Xoffset_URefF        -  .false.   -   "Flag for using input file URef instead of IfW values for calculating uniform wind. For testing purposes only" -
typedef  ^                 ParameterType  IntKi    GatesPerBeam                  -        -   -   "Amount of gates per point" -
typedef  ^                 ParameterType  IntKi    MAXDLLChainOutputs            -        -   -   "Number of entries in the avrSWAP reserved for the DLL chain" -
typedef  ^                 ParameterType  IntKi    ValidOutputs                  {:}      -   -   "List of valid output channels" -
typedef  ^                 ParameterType  IntKi    NumWindPoints                 -        -   -   "total numer of wind measurement locations (all scanned locations)"   -
typedef  ^                 ParameterType  LOGICAL  UniformWindTest               -        -   -   "Show wind steps upstream in uniform wind (violates UniformWind methodology). For testing purposes only" -

 ..... LidarSim_InputType data .......................................................................................................
typedef  LidarSim/LidarSim InputType      MeshType LidarMesh                     -        -   -   "Lidar motion mesh (includes the orientation and position relative to the mounting point)" -
typedef  ^                 InputType      ReKi     WindVelocity                  {:}{:}   -   -   "Wind velocity at all measurement points [index 1: x,y,z, index 2: MeasMesh point number]" m/s
 
 ..... LidarSim_InputFile data .......................................................................................................
typedef  LidarSim/LidarSim LidarSim_InputFile  LOGICAL  Echo                       -   -   -   "Echo input data to <RootName>.ech"   -
typedef  ^                 LidarSim_InputFile  IntKi    MAXDLLChainOutputs         -   -   -   "Number of entries in the avrSWAP reserved for the DLL chain" -
typedef  ^                 LidarSim_InputFile  IntKi    TrajectoryType             -   -   -   "Switch : {0 = cartesian coordinates; 1 = spherical coordinates}"   -
typedef  ^                 LidarSim_InputFile  IntKi    WeightingType              -   -   -   "Switch : {0 = single point; 1 = gaussian distribution}"   -
typedef  ^                 LidarSim_InputFile  ReKi     LidarPositionX             -   -   -   "Units of output-to-file channels"   -
typedef  ^                 LidarSim_InputFile  ReKi     LidarPositionY             -   -   -   "Names of output-to-file channels"   -
typedef  ^                 LidarSim_InputFile  ReKi     LidarPositionZ             -   -   -   "Units of output-to-file channels"   -
typedef  ^                 LidarSim_InputFile  R8Ki     RollAngle                  -   -   -   "Roll  angle between the reference position and the lidar coordinate system"   -
typedef  ^                 LidarSim_InputFile  R8Ki     PitchAngle                 -   -   -   "Pitch angle between the reference position and the lidar coordinate system"   -
typedef  ^                 LidarSim_InputFile  R8Ki     YawAngle                   -   -   -   "Yaw   angle between the reference position and the lidar coordinate system"   -
typedef  ^                 LidarSim_InputFile  ReKi     URef                       -   -   -   "Mean u-component wind speed at the reference height" m/s
typedef  ^                 LidarSim_InputFile  LOGICAL  UniformWindTest            -   -   -   "Show wind steps upstream in uniform wind (violates UniformWind methodology). For testing purposes only" -
typedef  ^                 LidarSim_InputFile  ReKi     t_measurement_interval     -   -   -   "Time between each measurement"   s
######################         Measuring Points         #############################################
typedef  ^                 LidarSim_InputFile  IntKi    NumberOfPoints_Cartesian   -      -   -   "Amount of Points" -
typedef  ^                 LidarSim_InputFile  ReKi     X_Cartesian_L              {:}    -   -   "X Coordinate (Lidar coordinate system)" m
typedef  ^                 LidarSim_InputFile  ReKi     Y_Cartesian_L              {:}    -   -   "X Coordinate (Lidar coordinate system)" m
typedef  ^                 LidarSim_InputFile  ReKi     Z_Cartesian_L              {:}    -   -   "X Coordinate (Lidar coordinate system)" m
typedef  ^                 LidarSim_InputFile  IntKi    NumberOfPoints_Spherical   -      -   -   "Amount of Points" -
typedef  ^                 LidarSim_InputFile  IntKi    GatesPerBeam               -      -   -   "Amount of gates per point" -
typedef  ^                 LidarSim_InputFile  ReKi     Azimuth                    {:}    -   -   "Azimuth Angles " deg
typedef  ^                 LidarSim_InputFile  ReKi     Elevation                  {:}    -   -   "Elevation Angles " deg
typedef  ^                 LidarSim_InputFile  ReKi     Range                      {:}{:} -   -   "Range gates " m
######################         Weighting function Points     ############################################
typedef  ^                 LidarSim_InputFile  ReKi     FWHM                       -      -   -   "Width of half maximum" m
typedef  ^                 LidarSim_InputFile  IntKi    PointsToEvaluate           -      -   -   "points evaluated to "integrate" (odd number so there is a point in the peak)" -
typedef  ^                 LidarSim_InputFile  IntKi    ManualWeightingPoints      -      -   -   "Amount of weighting points" -
typedef  ^                 LidarSim_InputFile  ReKi     ManualWeightingDistance    {:}    -   -   "Manual weighting distances" -
typedef  ^                 LidarSim_InputFile  ReKi     ManualWeighting            {:}    -   -   "Manual weighting" -
######################         Outlist                    ############################################
#FIXME: change length with dev merge
typedef  ^                 LidarSim_InputFile  CHARACTER(15)  OutList              {:}   -   -   "User requested Outlist"
typedef  ^                 LidarSim_InputFile  IntKi          NumOuts              -   -   -   "Number of output parameters"

# Misc Vars -- variables for optimization, such as index tracking etc.
typedef  LidarSim/LidarSim MiscVarType    IntKi    NextBeamID                 -      -   -   "BeamID for the next measurement" -
typedef  ^                 MiscVarType    IntKi    MeasurementCurrentStep     -      -   -   "Current amount of time steps after last measurement" -
typedef  ^                 MiscVarType    IntKi    LastMeasuringPoint         -      -   -   "Index of last measuring point"   -
typedef  ^                 MiscVarType    MeshMapType    u_L_p2p_y_Lmeas      -      -   -   "Mesh mapping from u%LidarMesh to y%LidarMeasMesh" -



# The following types are required by the modular framework.  Do not remvoe them even if unused.
# OtherState -- none noted here
typedef  LidarSim/LidarSim OtherStateType       ReKi  DummyOtherState      -  0  -     "Placeholder dummy var for satisfying the framework" -

# Define continuous (differentiable) states here:
typedef  LidarSim/LidarSim ContinuousStateType  ReKi  DummyContState       -   0   -   "Remove this variable if you have continuous states"   -

# Define discrete (nondifferentiable) states here:
typedef  LidarSim/LidarSim DiscreteStateType    ReKi  DummyDiscState       -   0   -   "Remove this variable if you have discrete states"   -

# Define constraint states here:
typedef  LidarSim/LidarSim ConstraintStateType  ReKi  DummyConstrState     -   0   -   "Remove this variable if you have constraint states"   -

